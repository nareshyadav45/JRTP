Spring-Schedular:
----------------

->Spring-Spring-Schedular is used to schedule the methods execution based on the our requirements. 

->We Can Schedule the Porgrame execution by Spring-Schedular.Based on the given time interval program will execute.

->In java classes Methods will executes when we call them otherwise won't execute.
->But I want to call the method of class manually and every at 9:00 pm or any given time method should execute automatically  itself with out any manuall call.

Note : To Execute the program with schedule we use spring schedular.

Note : In Our RealTimeProject , In IES Application we can tell Notices will be generated by Spring Scheduler Feature if interviewer asks.

Note : Spring-Schedular is used to schedule the program execution

->@Scheduled(fixedRate=2000) annotation to schedule the method execution and by using fixedRate parameter in annotation we mention at what time method program will execute .
  here we gave fixedRate=2000 whihc means every 2secs programm or method will execute.

Note : We Use @Scheduled annotation to when particular method should be execute.

Note : If we want to work with Scheduling in our application we have to write one annotation called @EnableScheduling above the Main Class of boot application 

Development :
-------------
Spring web
Devtools

Note : For Spring Scheduler we don't need any extra dependency we can use web dependency which is to develope the RestController purpose

Note : @Schedule annotation as part of Spring Core only , so we don't need to use web dependency also which is optional.  

Note : While we are workign with Scheduling in our application we use two annotation 1.@EnableScheduling at main class above and @scheduled above the method which we want to execute at specified time

package com.schedule.service;

import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Service;

@Service
public class WelcomeService {

	@Scheduled(fixedRate = 5000)
	public void schedularr() {
		//write any logic like fetch data  from db and send to client etc	
		System.out.println("Method Excuing....");
	}
	
}

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.scheduling.annotation.EnableScheduling;

@SpringBootApplication
@EnableScheduling
public class SpringSchedulingApplication {

	public static void main(String[] args) {
		SpringApplication.run(SpringSchedulingApplication.class, args);
	}

}


->Here as we mentioned service class method will executes every 5 Secs with out Externally we calls it.

Note : we have two concepts  in scheduled
 
       1.fixedRate : For given specified time method will keep on executes.
                     FixedRate doesn't depends on previous execution	                 
					 FixedRate doesn't care about previous execution whether the method performed it task or not , for given time period method will executes contineously.
					 
	   2.fixedDelay : Based on previous execution of method, next execution of method will be done.
	                  fixedDelay depends on previous execution
					  FixedDelay method will wait for previous execution of method task, then wait for specfied time and again method will execute and wiat for method to complete it task and again starts the execution of method.
					  
			
NOTE : FixedRate means based on given interval method will keep on execute irrespective method task execution completely
       FixedDelay means depends on previous execution if previous execution taking more time , it will wait for exectuion got successfully got completed and after specfied interval again method execution starts.
	   
Example : We have Bank NEFT Transactions are happens with spring batch with scheduling only.

->We have a requirement like every monday at 9 AM  or For every 6 months I want to exxecute the logic, I want to execute particular method then we use CRON Expression.
->CRON Expression to schedule the method execution based on client requirement.	

->To Customize the Schdule We use CRON Expression.

->In Cron expression we have to maintain 6(*) stars in expression.

->First * -> Minute (0-59): Specifis the minute at which task should execute 

->Second * -> Hour (0-23) : Specifies the hour at which task should execute 

->Third * -> Day Of Month (1-31): Specifies the day of the month at which task should execute.

->Fourth * -> Month (1-12): Specfies the month of year at which task should executes

->Fifth * -> Day Of The Week(0-7) : Specifies the day of the week at which task should excute
                                    0 and 7 both represents the sunday
->Six * -> Year : specifies the year at which task should execute.

Note : Six Star is optional.

Note : If we don't want mention any field just keep '*' instead of value

Note : If we keep '*' it will be consider it as every sec or hour or month or day or week etc

Note : Cron Expression Must Contains Six Stars

@EnableScheduling : annotation we used at boot start class of application and which enables the scheduling in application

@Scheduled : annotation we used to schudule the method execution and it is method level annotation

->For Scheduled annotation we have 3 parameters 
 
   fixedRate : Method will execute after given interval of time.
   
   fixedDelay : Method will wait for previous execution + given interval of time then start the execution of method
   
   cron : For Particular schedule then we write cron exepression 
          cron expression contains the six stars.
		  ->If we want to execute the method at particular hour or day or month etc then we use cron expression
   
 
  
 									
 
   
			
				
				